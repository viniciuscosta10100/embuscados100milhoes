lines(ano, tri2,col="red")
ano<-2001:2009
tri1<-read.table("100.txt",header=TRUE,sep="")
tri1
tri2<-c(60.6,53.7,55.3,56.7,56.4,57.8,57.5,59.8,63.3)
View(tri1)
plot(ano, tri1,type="l",main="Taxa de ocupação por trimestre dos hotéis - Município do Rio de
Janeiro",xlab="ano",ylab="Taxa de ocupação %",col="blue",ylim=c(50,80))
lines(ano, tri2,col="red")
View(tri1)
View(tri1)
ano<-2001:2009
ano<-2001:2009
tri1<-c(72.8,66.2,69.2,65.9,62.4,67.8,61.3,68.5,70.4)
tri2<-c(60.6,53.7,55.3,56.7,56.4,57.8,57.5,59.8,63.3)
plot(ano, tri1,type="l",main="Taxa de ocupação por trimestre dos hotéis - Município do Rio de
Janeiro",xlab="ano",ylab="Taxa de ocupação %",col="blue",ylim=c(50,80))
lines(ano, tri2,col="red")
ano<-2001:2009
ano<-2001:2009
tri1<-read.table("100.txt",header=TRUE,sep="")
View(tri1)
ano<-2001:2009
tri1<-read.table("100.txt",header=TRUE,sep="")
tri1<-as.matrix(tri1)
View(tri1)
tri2<-c(60.6,53.7,55.3,56.7,56.4,57.8,57.5,59.8,63.3)
plot(ano, tri1,type="l",main="Taxa de ocupação por trimestre dos hotéis - Município do Rio de
Janeiro",xlab="ano",ylab="Taxa de ocupação %",col="blue",ylim=c(50,80))
ano<-2001:2009
tri1<-read.table("100.txt",header=TRUE,sep="")
tri1<-as.matrix(tri1)
View(tri1)
plot(ano, tri1[,1],type="l",main="Taxa de ocupação por trimestre dos hotéis - Município do Rio de
Janeiro",xlab="ano",ylab="Taxa de ocupação %",col="blue",ylim=c(50,80))
lines(ano, tri1[,2],col="red")
ano<-2001:2009
tri1<-read.table("100.txt",header=TRUE,sep="")
tri1<-as.matrix(tri1)
plot(ano, tri1[,1],type="b",main="Taxa de ocupação por trimestre dos hotéis - Município do Rio de
Janeiro",xlab="ano",ylab="Taxa de ocupação %",col="blue",ylim=c(50,80))
lines(ano, tri1[,2],col="red",type="b")
ano<-2001:2009
tri1<-read.table("100.txt",header=TRUE,sep="")
tri1<-as.matrix(tri1)
plot(ano, tri1[,1],type="b",main="Taxa de ocupação por trimestre dos hotéis - Município do Rio de
Janeiro",xlab="ano",ylab="Taxa de ocupação %",col="blue",ylim=c(50,80))
ano<-2001:2009
tri1<-read.table("100.txt",header=TRUE,sep="")
tri1<-as.matrix(tri1)
plot(tri1[,1],type="b",main="Taxa de ocupação por trimestre dos hotéis - Município do Rio de
Janeiro",xlab="ano",ylab="Taxa de ocupação %",col="blue",ylim=c(50,80))
lines(tri1[,2],col="red",type="b")
ano<-2001:2009
tri1<-read.table("100.txt",header=TRUE,sep="")
tri1<-as.matrix(tri1)
plot(tri1[,1],type="b",main="Taxa de ocupação por trimestre dos hotéis - Município do Rio de
Janeiro",xlab="ano",ylab="Taxa de ocupação %",col="blue",ylim=c(50,80))
lines(tri1[,2],col="red",type="b")
tri1<-read.table("100.txt",header=TRUE,sep="")
tri1<-as.matrix(tri1)
plot(tri1[,1],type="b",main="Taxa de ocupação por trimestre dos hotéis - Município do Rio de
Janeiro",xlab="ano",ylab="Taxa de ocupação %",col="blue",ylim=c(50,80))
lines(tri1[,2],col="red",type="b")
definit<-read.table("100.txt",header=TRUE,sep="")
definit<-as.matrix(definit)
definit
barplot(definit,beside=TRUE,legend.text=rownames(definit),main="Bubblesort x Heapsort - Comparações - 500 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra1<-read.table("500.txt",header=TRUE,sep="")
graficobarra1<-as.matrix(graficobarra1)
barplot(graficobarra1,beside=TRUE,legend.text=rownames(graficobarra1),main="Bubblesort x Heapsort - Comparações - 500 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra1<-read.table("500barplot.txt",header=TRUE,sep="")
setwd("C:\Users\Lucas\workspace\VoidGraph")
setwd("\Users\Lucas\workspace\VoidGraph")
setwd("/Users/Lucas/workspace/VoidGraph")
graficobarra1<-read.table("500barplot.txt",header=TRUE,sep="")
graficobarra1<-as.matrix(graficobarra1)
barplot(graficobarra1,beside=TRUE,legend.text=rownames(graficobarra1),main="Bubblesort x Heapsort - Comparações - 500 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra2<-read.table("1000barplot.txt",header=TRUE,sep="")
graficobarra2<-as.matrix(graficobarra2)
barplot(graficobarra2,beside=TRUE,legend.text=rownames(graficobarra2),main="Bubblesort x Heapsort - Comparações - 1000 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra3<-read.table("5000barplot.txt",header=TRUE,sep="")
graficobarra3<-as.matrix(graficobarra3)
barplot(graficobarra3,beside=TRUE,legend.text=rownames(graficobarra3),main="Bubblesort x Heapsort - Comparações - 5000 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
plot(linebubble[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,2],col="red",type="b")
lines(linebubble[,3],col="green",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
View(linebubble)
plot(linebubble[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,2],col="red",type="b")
lines(linebubble[,3],col="green",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
plot(linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
View(lineheap)
View(linebubble)
View(lineheap)
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
plot(linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
plot(linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,3],col="green",type="b")
plot(linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",xlim=c(0,10000))
lines(lineheap[,3],col="green",type="b")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
elementos<-0:10000
plot(elementos,linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="b")
plot(elementos,lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
plot(linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,10000))
lines(linebubble[,3],col="red",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,10000))
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
plot(linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,10000))
lines(lineheap[,3],col="green",type="b")
plot(linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
plot(linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,3],col="green",type="b")
graficobarra1<-read.table("500barplot.txt",header=TRUE,sep="")
graficobarra1<-as.matrix(graficobarra1)
barplot(graficobarra1,beside=TRUE,legend.text=rownames(graficobarra1),main="Bubblesort x Heapsort - Comparações - 500 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra2<-read.table("1000barplot.txt",header=TRUE,sep="")
graficobarra2<-as.matrix(graficobarra2)
barplot(graficobarra2,beside=TRUE,legend.text=rownames(graficobarra2),main="Bubblesort x Heapsort - Comparações - 1000 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra3<-read.table("5000barplot.txt",header=TRUE,sep="")
graficobarra3<-as.matrix(graficobarra3)
barplot(graficobarra3,beside=TRUE,legend.text=rownames(graficobarra3),main="Bubblesort x Heapsort - Comparações - 5000 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
graficobarra1<-read.table("200barplot.txt",header=TRUE,sep="")
graficobarra1<-as.matrix(graficobarra1)
barplot(graficobarra1,beside=TRUE,legend.text=rownames(graficobarra1),main="Bubblesort x Heapsort - Comparações - 500 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra2<-read.table("300barplot.txt",header=TRUE,sep="")
graficobarra2<-as.matrix(graficobarra2)
barplot(graficobarra2,beside=TRUE,legend.text=rownames(graficobarra2),main="Bubblesort x Heapsort - Comparações - 1000 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra3<-read.table("500barplot.txt",header=TRUE,sep="")
graficobarra3<-as.matrix(graficobarra3)
barplot(graficobarra3,beside=TRUE,legend.text=rownames(graficobarra3),main="Bubblesort x Heapsort - Comparações - 5000 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
elementos<-1:1000
plot(linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
plot(elementos,linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,3],col="green",type="b")
elementos<-0
for (i in 1:100) {
elemento<-c(elemento,elemento+100)
}
elementos<-0
elementos<-0
for (i in 1:100) {
elementos<-c(elementos,elementos+100)
}
plot(linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
elementos<-0
a<-100
for (i in 1:100) {
elementos<-c(elementos,a)
a<-a+100
}
elementos
plot(elementos,elementos,linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
elementos<-0
a<-100
for (i in 1:100) {
elementos<-c(elementos,a)
a<-a+100
}
elementos
plot(linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
plot(elementos,linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,3],col="green",type="b")
plot(elementos,linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="b")
graficobarra1<-read.table("200barplot.txt",header=TRUE,sep="")
graficobarra1<-as.matrix(graficobarra1)
barplot(graficobarra1,beside=TRUE,legend.text=rownames(graficobarra1),main="Bubblesort x Heapsort - Comparações - 500 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra2<-read.table("300barplot.txt",header=TRUE,sep="")
graficobarra2<-as.matrix(graficobarra2)
barplot(graficobarra2,beside=TRUE,legend.text=rownames(graficobarra2),main="Bubblesort x Heapsort - Comparações - 1000 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
graficobarra3<-read.table("500barplot.txt",header=TRUE,sep="")
graficobarra3<-as.matrix(graficobarra3)
barplot(graficobarra3,beside=TRUE,legend.text=rownames(graficobarra3),main="Bubblesort x Heapsort - Comparações - 5000 Elementos",ylab="N.de comparações",xlab="Algoritmos de ordenação")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
elementos<-0
a<-100
for (i in 1:100) {
elementos<-c(elementos,a)
a<-a+100
}
elementos
plot(linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
plot(elementos,linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="b")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
elementos<-0
a<-100
for (i in 1:100) {
elementos<-c(elementos,a)
a<-a+100
}
elementos
plot(linebubble[,2],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="b")
plot(lineheap[,1],type="b",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="b")
lines(lineheap[,3],col="green",type="b")
plot(elementos,linebubble[,3],type="b",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="b")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
elementos<-0
a<-100
for (i in 1:100) {
elementos<-c(elementos,a)
a<-a+100
}
elementos
plot(linebubble[,2],type="o",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="o")
plot(lineheap[,1],type="o",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="o")
lines(lineheap[,3],col="green",type="o")
plot(elementos,linebubble[,3],type="o",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="o")
elementos
plot(linebubble[,2],type="o",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="o")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","green"),pch=rep(20,2))
elementos
plot(linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),pch=rep(20,2))
plot(linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1)
plot(linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2)
plot(linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
elementos
plot(linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
plot(lineheap[,1],type="o",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="o")
lines(lineheap[,3],col="green",type="o")
elementos
plot(linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
plot(lineheap[,1],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="l")
lines(lineheap[,3],col="green",type="l")
legend("topleft",c("Crescente","Decrescente","Aleatório"),col=c("blue","red","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="l")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=(0:10000))
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0:10000))
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,10000))
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,20000))
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,100000))
lines(elementos,lineheap[,3],col="green",type="l")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,1000000))
lines(elementos,lineheap[,3],col="green",type="l")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,10000000))
lines(elementos,lineheap[,3],col="green",type="l")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,5000000))
lines(elementos,lineheap[,3],col="green",type="l")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,3000000))
lines(elementos,lineheap[,3],col="green",type="l")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,1000000))
lines(elementos,lineheap[,3],col="green",type="l")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","red"),lty=1,lwd=2,bty="n")
plot(linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
plot(lineheap[,1],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="l")
plot(lineheap[,1],type="l",main="Gráfico de linha - Heapsort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="l")
lines(lineheap[,3],col="green",type="l")
legend("topleft",c("Crescente","Decrescente","Aleatório"),col=c("blue","red","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(1000,100000))
lines(elementos,lineheap[,3],col="green",type="l")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,100000))
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,1000000))
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue",ylim=c(0,10000000))
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
View(linebubble)
plot(elementos,linebubble[,2],type="l",main="BUBBLESORT VS HEAPSORT - DECRESCENTE",xlab="N° de elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,2],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,2],type="l",main="BUBBLESORT VS HEAPSORT - DECRESCENTE",xlab="N° de elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,2],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
elementos<-0
a<-100
for (i in 1:100) {
elementos<-c(elementos,a)
a<-a+100
}
elementos
plot(linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
plot(lineheap[,1],type="l",main="Gráfico de linha - Heapsort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="l")
lines(lineheap[,3],col="green",type="l")
legend("topleft",c("Crescente","Decrescente","Aleatório"),col=c("blue","red","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,2],type="l",main="BUBBLESORT VS HEAPSORT - DECRESCENTE",xlab="N° de elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,2],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
elementos<-0
a<-100
for (i in 1:100) {
elementos<-c(elementos,a)
a<-a+100
}
plot(linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
plot(lineheap[,1],type="l",main="Gráfico de linha - Heapsort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,2],col="red",type="l")
lines(lineheap[,3],col="green",type="l")
legend("topleft",c("Crescente","Decrescente","Aleatório"),col=c("blue","red","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,2],type="l",main="BUBBLESORT VS HEAPSORT - DECRESCENTE",xlab="N° de elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,2],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,2],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,linebubble[,3],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
plot(elementos,lineheap[,1],type="l",main="Gráfico de linha - Heapsort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,2],col="red",type="l")
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Crescente","Decrescente","Aleatório"),col=c("blue","red","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(elementos,linebubble[,2],type="l",main="BUBBLESORT VS HEAPSORT - DECRESCENTE",xlab="N° de elementos no array",ylab="Trocas",col="blue")
lines(elementos,lineheap[,2],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
View(linebubble)
View(linebubble)
plot(linebubble[,1],linebubble[,3],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,1],linebubble[,4],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
plot(linebubble[,1],linebubble[,3],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,1],linebubble[,4],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
plot(lineheap[,1],lineheap[,2],type="l",main="Gráfico de linha - Heapsort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,1],lineheap[,3],col="red",type="l")
lines(lineheap[,1],lineheap[,4],col="green",type="l")
legend("topleft",c("Crescente","Decrescente","Aleatório"),col=c("blue","red","green"),lty=1,lwd=2,bty="n")
plot(linebubble[,1],linebubble[,4],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,1],lineheap[,4],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(linebubble[,1],linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DECRESCENTE",xlab="N° de elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,1],lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
graficobarra1
graficobarra1<-read.table("5000barplot.txt",header=TRUE,sep="")
graficobarra1<-as.matrix(graficobarra1)
barplot(graficobarra1,beside=TRUE,legend.text=rownames(graficobarra1),main="Bubblesort x Heapsort - Trocas",ylab="N.de trocas",xlab="Algoritmos de ordenação")
graficobarra1<-read.table("1000barplot.txt",header=TRUE,sep="")
graficobarra1<-as.matrix(graficobarra1)
barplot(graficobarra1,beside=TRUE,legend.text=rownames(graficobarra1),main="Bubblesort x Heapsort - Trocas",ylab="N.de trocas",xlab="Algoritmos de ordenação")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
plot(linebubble[,1],linebubble[,3],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,1],linebubble[,4],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
lines(lineheap[,1],lineheap[,4],col="green",type="l")
lines(lineheap[,1],lineheap[,3],col="red",type="l")
plot(lineheap[,1],lineheap[,2],type="l",main="Gráfico de linha - Heapsort",xlab="Elementos no array",ylab="Trocas",col="blue")
plot(linebubble[,1],linebubble[,4],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
legend("topleft",c("Crescente","Decrescente","Aleatório"),col=c("blue","red","green"),lty=1,lwd=2,bty="n")
lines(lineheap[,1],lineheap[,4],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(linebubble[,1],linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DECRESCENTE",xlab="N° de elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,1],lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
linebubble<-read.table("BUBBLESORT-PLOTLINE.txt",header=TRUE,sep="")
lineheap<-read.table("HEAPSORT-PLOTLINE.txt",header=TRUE,sep="")
linebubble<-as.matrix(linebubble)
lineheap<-as.matrix(lineheap)
plot(linebubble[,1],linebubble[,3],type="l",main="Gráfico de linha - Bubblesort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(linebubble[,1],linebubble[,4],col="red",type="l")
legend("topleft",c("Decrescente","Aleatório"),col=c("blue","red"),lty=1,lwd=2,bty="n")
plot(lineheap[,1],lineheap[,2],type="l",main="Gráfico de linha - Heapsort",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,1],lineheap[,3],col="red",type="l")
lines(lineheap[,1],lineheap[,4],col="green",type="l")
legend("topleft",c("Crescente","Decrescente","Aleatório"),col=c("blue","red","green"),lty=1,lwd=2,bty="n")
plot(linebubble[,1],linebubble[,4],type="l",main="BUBBLESORT VS HEAPSORT - DESORDENADO",xlab="Elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,1],lineheap[,4],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
plot(linebubble[,1],linebubble[,3],type="l",main="BUBBLESORT VS HEAPSORT - DECRESCENTE",xlab="N° de elementos no array",ylab="Trocas",col="blue")
lines(lineheap[,1],lineheap[,3],col="green",type="l")
legend("topleft",c("Bubblesort","Heapsort"),col=c("blue","green"),lty=1,lwd=2,bty="n")
graficobarra1<-read.table("1000barplot.txt",header=TRUE,sep="")
graficobarra1<-as.matrix(graficobarra1)
barplot(graficobarra1,beside=TRUE,legend.text=rownames(graficobarra1),main="Bubblesort x Heapsort - Trocas",ylab="N.de trocas",xlab="Algoritmos de ordenação")
View(graficobarra1)
View(linebubble)
getwd()
